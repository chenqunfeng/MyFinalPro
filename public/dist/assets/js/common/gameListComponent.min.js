(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var com, gameBox, release,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

com = require("./pubComponent.coffee");

release = require("./pubPreviewerWinComponent.coffee");

gameBox = (function(superClass) {
  extend(gameBox, superClass);

  function gameBox(data) {
    gameBox.__super__.constructor.call(this);
    this.init(data);
  }

  gameBox.prototype.init = function(data) {
    return this.setData(data);
  };

  gameBox.prototype.setData = function(data) {
    if (data) {
      this.data = data;
    }
    return this;
  };

  gameBox.prototype.getGameBoxHtml = function() {
    var config, gb, html, title;
    gb = document.createElement("div");
    gb.setAttribute("data-id", this.data._id);
    title = "无标题";
    config = this.data.data.defaultConfig.items;
    config.map((function(_this) {
      return function(unit, index) {
        var name;
        name = unit.key_name;
        if ("game_name" === name) {
          return title = unit.key_value;
        }
      };
    })(this));
    this.url = this.data.data.defaultConfig.link;
    html = "<div class=\"proGameBox borderBox\">\n    <div class=\"gameBoxCover borderBox\"></div>\n    <div class=\"gameBoxDetail borderBox\">\n        <div class=\"gameDetail\">\n            <span class=\"gameTitle\">" + title + "</span>\n            <span class=\"linkButton\">预览></span>\n        </div>\n        <div class=\"kind\">\n            <span class=\"littleBlock\">不限</span>\n        </div>\n        <button class=\"gameEditor button\">开始制作</button>\n    </div>\n</div>";
    gb.innerHTML = html;
    this.contain = gb;
    return gb;
  };

  gameBox.prototype.gameBoxEventBind = function() {
    var editorBtn, linkBtn;
    linkBtn = this.contain.querySelector(".linkButton");
    editorBtn = this.contain.querySelector(".gameEditor");
    linkBtn.addEventListener("click", (function(_this) {
      return function() {
        var id;
        id = _this.contain.getAttribute("data-id");
        return $.ajax({
          type: "post",
          url: "/game/setGameId",
          dataType: "json",
          data: {
            gameId: _this.data._id
          },
          success: function(data) {
            var status;
            status = data.status;
            if ("success" === status) {
              if (_this.release) {
                return _this.release.open();
              } else {
                return _this.release = new release(_this.url);
              }
            }
          },
          error: function(err) {
            return console.log(err);
          }
        });
      };
    })(this));
    return editorBtn.addEventListener("click", (function(_this) {
      return function() {
        return $.ajax({
          type: "post",
          url: "/game/setGameId",
          dataType: "json",
          data: {
            gameId: _this.data._id
          },
          success: function(data) {
            var status;
            status = data.status;
            if ("success" === status) {
              return location.href = "/game/editor";
            }
          },
          error: function(err) {
            return console.log(err);
          }
        });
      };
    })(this));
  };

  return gameBox;

})(com.Components);

module.exports = gameBox;


},{"./pubComponent.coffee":3,"./pubPreviewerWinComponent.coffee":6}],2:[function(require,module,exports){
var com, gameBox, gameList,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

com = require("./pubComponent.coffee");

gameBox = require("./gameBoxComponent.coffee");

gameList = (function(superClass) {
  extend(gameList, superClass);

  function gameList(selector) {
    gameList.__super__.constructor.call(this, selector);
    this.init().gameListEventSubscribe();
  }

  gameList.prototype.init = function() {
    console.log("init gameList");
    this.gBox = [];
    return this;
  };

  gameList.prototype.getGameConfig = function() {
    return $.ajax({
      type: "get",
      url: "/game/list",
      dataType: "json",
      success: (function(_this) {
        return function(data) {
          return _this.publish("gameList.getGameConfig", data.list);
        };
      })(this),
      error: (function(_this) {
        return function(err) {
          return console.log(err);
        };
      })(this)
    });
  };

  gameList.prototype.gameListEventSubscribe = function() {
    this.subscribe("gameList.getGameConfig", (function(_this) {
      return function(publisher, type, data) {
        return data.map(function(unit, index) {
          var gB, html;
          gB = new gameBox(unit);
          html = gB.getGameBoxHtml();
          if (html) {
            _this.contain.appendChild(html);
          }
          _this.gBox.push(gB);
          return gB.gameBoxEventBind();
        });
      };
    })(this));
    return this;
  };

  return gameList;

})(com.Components);

module.exports = gameList;


},{"./gameBoxComponent.coffee":1,"./pubComponent.coffee":3}],3:[function(require,module,exports){
var Components, Events,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Events = (function() {
  function Events() {
    this.subscription = {};
  }

  Events.prototype.subscribe = function(type, fn, cons) {
    var f, id, p, r;
    if ("undefined" === typeof this.subscription.eventmap) {
      this.subscription.eventmap = {};
    }
    if ("undefined" === typeof this.subscription[type]) {
      this.subscription[type] = [];
    }
    p = this.subscription[type];
    r = false;
    if (p.length > 0) {
      f = fn.toString();
      r = !this.each.call(p, function(item) {
        if (item && f === item.response.toString() && cons && cons === item.caller) {
          return false;
        }
      });
    }
    if (false === r) {
      id = Math.floor(Math.random() * 1000000000000000).toString(36);
      this.subscription.eventmap[id] = type;
      p.push({
        "id": id,
        "response": fn,
        "caller": cons
      });
    }
    return id;
  };

  Events.prototype.publish = function(type) {
    var p, params, publisher;
    p = this.subscription[type];
    if (p && p.length) {
      params = arguments.length > 0 ? Array.prototype.slice.call(arguments) : [];
      publisher = this;
      params.unshift(publisher);
      this.each.call(p, function(item) {
        var cons;
        if (item) {
          cons = item.caller || null;
          return item.response.apply(cons, params);
        }
      });
    }
    return this;
  };

  Events.prototype.unsubscribe = function(id, handle) {
    var map, p, type;
    if ("string" === typeof id) {
      if ("type" === handle) {
        this.subscription[type] && (this.subscription[type].length = 0);
      } else {
        map = this.subscription.eventmap;
        type = map[id];
        if (type) {
          p = this.subscription[type];
          if (p && p.length > 0) {
            this.each.call(p, function(item, index) {
              if (item && id === item.id) {
                p[index] = null;
                map[id] = null;
                delete map[id];
                return false;
              }
            });
          }
        }
      }
    } else {
      this.subscription = {};
    }
    return this;
  };

  Events.prototype.each = function(fn) {
    var i, index, item, key, len, len1, params, result;
    len = this.length;
    params = arguments.length > 1 ? Array.prototype.slice.call(arguments) : [];
    params.length > 1 && params.shift();
    if (len) {
      for (index = i = 0, len1 = this.length; i < len1; index = ++i) {
        item = this[index];
        result = fn.apply(this, [item, index].concat(params));
        if (result === false) {
          return false;
        }
      }
    } else {
      for (key in this) {
        item = this[key];
        if (this.hasOwnProperty(key)) {
          result = fn.apply(this, [item, key].concat(params));
          if (result === false) {
            return false;
          }
        }
      }
    }
    return true;
  };

  return Events;

})();

Components = (function(superClass) {
  extend(Components, superClass);

  function Components(selector) {
    var node;
    Components.__super__.constructor.call(this);
    this.contain = null;
    if ("string" === typeof selector) {
      node = document.querySelector(selector);
    } else if ("object" === typeof selector && selector.nodeType && 1 === selector.nodeType) {
      node = selector;
    }
    if (node && node.getAttribute) {
      this.contain = node;
    }
    this.subscribe("render", this.init, this);
  }

  Components.prototype.render = function(fn) {
    fn.call(this);
    return this.publish("render");
  };

  Components.prototype.init = function() {};

  Components.prototype.contains = function(parent, child) {
    if (parent === child) {
      return 0;
    }
    if (parent.contains) {
      if (parent.contains(child)) {
        return 1;
      }
    } else {
      if (!!(parent.compareDocumentPosition(child) & 16)) {
        return 1;
      }
    }
    return -1;
  };

  Components.prototype.upperStyleName = function(s) {
    return s && s.length && s.replace(/-([a-z])/g, function(a, b) {
      return b.toUpperCase();
    }) || '';
  };

  Components.prototype.lowerStyleName = function(s) {
    return s && s.length && s.replace(/([A-Z])/g, function(a, b) {
      return '-' + b.toLowerCase();
    }) || '';
  };

  Components.prototype.addClass = function(node, className) {
    if (node && node.getAttribute) {
      if (!this.hasClass(node, className)) {
        node.className += " " + className;
      }
    }
    return this;
  };

  Components.prototype.removeClass = function(node, className) {
    var oldClass, reg;
    if (node && node.getAttribute) {
      if (this.hasClass(node, className)) {
        oldClass = node.className;
        reg = new RegExp("(^|\\s)" + className + "(\\s|$)");
        node.className = oldClass.replace(reg, " ").replace(/(^\s+|\s+$)/g, "");
      }
    }
    return this;
  };

  Components.prototype.hasClass = function(node, className) {
    var reg;
    if (node && node.getAttribute) {
      reg = new RegExp("(^|\\s)" + className + "(\\s|$)");
      return node.className && reg.test(node.className);
    }
    return false;
  };

  return Components;

})(Events);

module.exports = {
  Events: Events,
  Components: Components
};


},{}],4:[function(require,module,exports){
var PopUp, com, popUp,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

com = require("./pubComponent.coffee");

popUp = require("./pubPopUpComponent.coffee");

PopUp = (function(superClass) {
  extend(PopUp, superClass);

  function PopUp() {
    PopUp.__super__.constructor.call(this);
    this.init().render().popUpEventBind();
  }

  PopUp.prototype.init = function() {
    return this;
  };

  PopUp.prototype.setContent = function(html) {
    if (html) {
      this.contain.innerHTML = html;
    }
    return this;
  };

  PopUp.prototype.render = function() {
    var html, pop;
    pop = document.createElement("div");
    pop.setAttribute("id", "popUpWin");
    pop.setAttribute("class", "normalTransition realFadeOut");
    html = "<div class=\"popContainer fadeOut normalTransition\">\n    <div class=\"closeBtn\">\n    </div>\n    <div class=\"popContent\">\n    </div>\n</div>";
    pop.innerHTML = html;
    this.greateContain = pop;
    this.secondaryContain = pop.querySelector(".popContainer");
    this.contain = pop.querySelector(".popContent");
    document.querySelector("body").appendChild(pop);
    return this;
  };

  PopUp.prototype.popUpEventBind = function() {
    var close;
    close = this.contain.parentNode.querySelector(".closeBtn");
    return close.addEventListener("click", (function(_this) {
      return function() {
        return _this.close();
      };
    })(this));
  };

  PopUp.prototype.open = function() {
    this.removeClass(this.secondaryContain, "fadeOut");
    this.addClass(this.secondaryContain, "fadeIn");
    this.removeClass(this.greateContain, "realFadeOut");
    this.addClass(this.greateContain, "realFadeIn");
    return this.publish("popUp.open");
  };

  PopUp.prototype.close = function() {
    this.removeClass(this.secondaryContain, "fadeIn");
    this.addClass(this.secondaryContain, "fadeOut");
    this.removeClass(this.greateContain, "realFadeIn");
    this.addClass(this.greateContain, "realFadeOut");
    return this.publish("popUp.close");
  };

  return PopUp;

})(com.Components);

module.exports = PopUp;


},{"./pubComponent.coffee":3,"./pubPopUpComponent.coffee":4}],5:[function(require,module,exports){
var Previewer, com,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

com = require("./pubComponent.coffee");

Previewer = (function(superClass) {
  extend(Previewer, superClass);

  function Previewer(url) {
    Previewer.__super__.constructor.call(this);
    this.init(url);
  }

  Previewer.prototype.init = function(url) {
    this.hasChangedUrl = false;
    this.setUrl(url);
    return this;
  };

  Previewer.prototype.setUrl = function(url) {
    if (url) {
      this.url = url;
      this.hasChangedUrl = true;
    }
    return this;
  };

  Previewer.prototype.preLoad = function() {
    if (this.hasChangedUrl) {
      this.contain.setAttribute("src", this.url);
      this.hasChangedUrl = false;
    }
    return this;
  };

  Previewer.prototype.reload = function(url) {
    this.contain.setAttribute("src", this.url);
    return this;
  };

  Previewer.prototype.getPreHtml = function() {
    var iframe;
    iframe = document.createElement("iframe");
    iframe.setAttribute("class", "previewer");
    this.contain = iframe;
    this.preLoad();
    return iframe;
  };

  return Previewer;

})(com.Components);

module.exports = Previewer;


},{"./pubComponent.coffee":3}],6:[function(require,module,exports){
var PreviewerWin, com, popUp, previewer,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

com = require("./pubComponent.coffee");

popUp = require("./pubPopUpComponent.coffee");

previewer = require("./pubPreviewerComponent.coffee");

PreviewerWin = (function(superClass) {
  extend(PreviewerWin, superClass);

  function PreviewerWin(url) {
    PreviewerWin.__super__.constructor.call(this);
    this.init(url);
  }

  PreviewerWin.prototype.init = function(url) {
    this.setUrl(url).render().ReleaseWinEventBind();
    return this;
  };

  PreviewerWin.prototype.setUrl = function(url) {
    if (url) {
      this.preUrl = url;
    }
    return this;
  };

  PreviewerWin.prototype.render = function() {
    var html;
    this.popUp = new popUp();
    this.previewer = new previewer(this.preUrl);
    html = "<div class=\"previewerContainer\"></div>\n<div class=\"gameInfoContainer\">\n    <div class=\"button editorGame\">\n        开始制作\n    </div>\n</div>";
    this.popUp.setContent(html);
    this.previewerContain = this.popUp.contain.querySelector(".previewerContainer");
    this.gameInfoContainer = this.popUp.contain.querySelector(".gameInfoContainer");
    this.previewerContain.appendChild(this.previewer.getPreHtml());
    setTimeout((function(_this) {
      return function() {
        return _this.open();
      };
    })(this), 0);
    return this;
  };

  PreviewerWin.prototype.ReleaseWinEventBind = function() {
    var editor;
    editor = this.gameInfoContainer.querySelector(".editorGame");
    return editor.addEventListener("click", (function(_this) {
      return function() {
        return location.href = "/game/editor";
      };
    })(this));
  };

  PreviewerWin.prototype.open = function() {
    if (this.popUp) {
      this.popUp.open();
      this.publish("PreviewerWin.open");
    }
    return this;
  };

  PreviewerWin.prototype.close = function() {
    if (this.popUp) {
      this.popUp.close();
      this.publish("PreviewerWin.close");
    }
    return this;
  };

  return PreviewerWin;

})(com.Components);

module.exports = PreviewerWin;


},{"./pubComponent.coffee":3,"./pubPopUpComponent.coffee":4,"./pubPreviewerComponent.coffee":5}]},{},[2])